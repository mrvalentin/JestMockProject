// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Mock Login page Test credentials 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Component
    style={
      Object {
        "backgroundColor": "#ffffff",
        "justifyContent": "center",
        "marginTop": 50,
        "padding": 20,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    >
      Login
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    >
      username
    </Text>
    <TextInput
      allowFontScaling={true}
      editable={true}
      onChangeText={[Function]}
      style={
        Object {
          "borderColor": "gray",
          "borderWidth": 1,
          "height": 40,
        }
      }
      value="Mock username"
    />
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    >
      password
    </Text>
    <TextInput
      allowFontScaling={true}
      editable={true}
      onChangeText={[Function]}
      style={
        Object {
          "borderColor": "gray",
          "borderWidth": 1,
          "height": 40,
        }
      }
      value="123"
    />
    <Button
      onPress={[Function]}
      title="Login"
    />
  </Component>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          Login
        </Text>,
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          username
        </Text>,
        <TextInput
          allowFontScaling={true}
          editable={true}
          onChangeText={[Function]}
          style={
            Object {
              "borderColor": "gray",
              "borderWidth": 1,
              "height": 40,
            }
          }
          value="Mock username"
        />,
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          password
        </Text>,
        <TextInput
          allowFontScaling={true}
          editable={true}
          onChangeText={[Function]}
          style={
            Object {
              "borderColor": "gray",
              "borderWidth": 1,
              "height": 40,
            }
          }
          value="123"
        />,
        <Button
          onPress={[Function]}
          title="Login"
        />,
      ],
      "style": Object {
        "backgroundColor": "#ffffff",
        "justifyContent": "center",
        "marginTop": 50,
        "padding": 20,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "accessible": true,
          "allowFontScaling": true,
          "children": "Login",
          "ellipsizeMode": "tail",
        },
        "ref": null,
        "rendered": "Login",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "accessible": true,
          "allowFontScaling": true,
          "children": "username",
          "ellipsizeMode": "tail",
        },
        "ref": null,
        "rendered": "username",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "allowFontScaling": true,
          "editable": true,
          "onChangeText": [Function],
          "style": Object {
            "borderColor": "gray",
            "borderWidth": 1,
            "height": 40,
          },
          "value": "Mock username",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "accessible": true,
          "allowFontScaling": true,
          "children": "password",
          "ellipsizeMode": "tail",
        },
        "ref": null,
        "rendered": "password",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "allowFontScaling": true,
          "editable": true,
          "onChangeText": [Function],
          "style": Object {
            "borderColor": "gray",
            "borderWidth": 1,
            "height": 40,
          },
          "value": "123",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onPress": [Function],
          "title": "Login",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "View",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            Login
          </Text>,
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            username
          </Text>,
          <TextInput
            allowFontScaling={true}
            editable={true}
            onChangeText={[Function]}
            style={
              Object {
                "borderColor": "gray",
                "borderWidth": 1,
                "height": 40,
              }
            }
            value="Mock username"
          />,
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          >
            password
          </Text>,
          <TextInput
            allowFontScaling={true}
            editable={true}
            onChangeText={[Function]}
            style={
              Object {
                "borderColor": "gray",
                "borderWidth": 1,
                "height": 40,
              }
            }
            value="123"
          />,
          <Button
            onPress={[Function]}
            title="Login"
          />,
        ],
        "style": Object {
          "backgroundColor": "#ffffff",
          "justifyContent": "center",
          "marginTop": 50,
          "padding": 20,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "Login",
            "ellipsizeMode": "tail",
          },
          "ref": null,
          "rendered": "Login",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "username",
            "ellipsizeMode": "tail",
          },
          "ref": null,
          "rendered": "username",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "allowFontScaling": true,
            "editable": true,
            "onChangeText": [Function],
            "style": Object {
              "borderColor": "gray",
              "borderWidth": 1,
              "height": 40,
            },
            "value": "Mock username",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "password",
            "ellipsizeMode": "tail",
          },
          "ref": null,
          "rendered": "password",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "allowFontScaling": true,
            "editable": true,
            "onChangeText": [Function],
            "style": Object {
              "borderColor": "gray",
              "borderWidth": 1,
              "height": 40,
            },
            "value": "123",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onPress": [Function],
            "title": "Login",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "View",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
    "hydrateIn": undefined,
  },
}
`;

exports[`Testing Mock Login page Test render 1`] = `[Function]`;
